<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bowser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_bowserparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The "all-mighty" King Koopa

/*
//  This object uses creation code
//
//      hammer = To make bowser throw hammers
//      fake   = Sets up a different set of colours (1...7)
*/

//Default variables
hammer = global.hardmode;
fake = 0;

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 1;

//How many points should the enemy give when killed with an item
handicap = 8;
handicap_stomp = 0;

//Palette
palette_index = noone;

//Facing direction
xscale = 1;

//Hits
hits = 5;

//Hammers left
rounds = 8;

//Whether bowser is in lava
inlava = 0;

//Whether bowser is jumping
jumping = 0;

//Display 'Hurt' sprite for a moment
cooldown = 0;

//Previous horizontal speed
prevhspeed = 0;

//Animate
image_speed = 0.1;

//Start moving
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy fire generator

with (obj_generator_flame) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move towards the player

//Move towards the player
hspeed = -0.3;

//Make him jump
alarm[0] = 60;

//Make him breath fire
alarm[1] = 300;

//Make him throw hammers
if (hammer == 1)
    alarm[4] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create daze effect

with (instance_create(x+random_range(-8, 8), bbox_top-5, obj_smoke)) {

    sprite_index = spr_daze;
}
alarm[5] = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throw a given amount of hammers

//If bowser can still throw hammers
if (rounds &gt; 0) {

    //If facing left and not breathing fire
    if (xscale == -1) 
    &amp;&amp; (sprite_index == spr_bowser) {
    
        //Play 'Hammer' sound
        audio_play_sound(snd_hammer, 0, false);
        
        //Decrement hammer
        rounds--;
        
        //Create hammer
        with (instance_create(x-8, bbox_top-8, obj_hammer)) {

            hspeed = -1;
            image_xscale = -1;
        }
        
        //Toss another hammer
        alarm[4] = 4+random(4);
    }
    
    //Otherwise, wait
    else
        alarm[4] = 1;
}

//Otherwise, recharge
else if (rounds == 0) {

    //Throw another bunch of hammers.
    rounds = 6;
    
    //Throw them again
    alarm[4] = 120;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop breathing fire

//Set default sprite
sprite_index = spr_bowser;

//Animate
image_speed = 0.1;
image_index = 0;

//Breathe fire again.
alarm[1] = 60+random(30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Breathe fire

//Play 'Bowser Flame' sound
audio_play_sound(snd_bowser_flame, 0, false);

//Create fire
with (instance_create(x-16, y-15, obj_bowser_flame)) {

    if (choose(0,1,2) == 1) {
    
        vspeed = -1;
        alarm[0] = 16;
    }
    else if (choose(0,1,2) == 2) {
    
        vspeed = 1;
        alarm[0] = 16;
    }
}

//Set the animation
image_speed = 0;
image_index = 1;

//Return to normal
alarm[3] = 36;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make bowser breathe fire if looking at the left

//If facing left
if (xscale == -1) {

    //Set the breathing sprite
    sprite_index = spr_bowser_breathe;
    
    //Animate
    image_speed = 0;
    image_index = 0;
    
    //Breathe fire
    alarm[2] = 30;
}
else
    alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make bowser jump if he is looking to the left

//If facing left
if (xscale == -1) {

    //If in ground
    if (jumping == 0) {
    
        //Hop
        vspeed = -2.5;
        
        //Jump
        jumping = 1;
        
        //Move up
        y--;
    }
}
else
    alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bowser logic

//If the player dies, stop everything
if (can_freeze()) {

    scr_freeze();
    exit;
}

//If the axe exists
if (instance_exists(obj_axe)) {

    //If the axe is visible
    if (obj_axe.visible == true) {
    
        //If the player exists
        if (instance_exists(obj_playerparent)) {
        
            //If the player is at the right
            if (obj_playerparent.x &gt; x) {

                //Check if bowser is not breathing fire
                if (sprite_index == spr_bowser)
                &amp;&amp; (vspeed == 0) {
                
                    hspeed = 0.45;
                    xscale = 1;
                    if (x &gt; obj_axe.x-16)
                        x = obj_axe.x-16;
                }
                else {
                
                    //If there's no previous hspeed
                    if (prevhspeed == 0) {
                    
                        prevhspeed = hspeed;
                    }
                    hspeed = 0;
                }
            }
            
            //Otherwise
            else {
            
                //Look always at the left
                xscale = -1;
            
                //If bowser is breathing fire, stop
                if (sprite_index == spr_bowser) {
                
                    //If not moving
                    if (prevhspeed != 0) {
                                   
                        hspeed = prevhspeed;
                        prevhspeed = 0;
                    }
                    
                    //Otherwise, 
                    else {
                    
                        //Manage direction
                        if (hspeed &gt; 0) {
                        
                            hspeed = 0.3;
                            if (x &gt; xstart)
                                hspeed = -hspeed;
                        }
                        else if (hspeed &lt; 0) {
                        
                            hspeed = -0.3;
                            if (x &lt; xstart-144)             
                                hspeed = -hspeed;
                        }
                    }
                }
                else {
                
                    //Stop moving
                    if (prevhspeed == 0) {
                    
                        prevhspeed = hspeed;
                    }
                    hspeed = 0;
                }
            }
        }
        
        //Inherit event
        event_inherited();
        
        //Set gravity when not jumping
        if (gravity &gt; 0)
            gravity = 0.075;
            
        //Otherwise
        else {
        
            if (jumping == 1) {
            
                jumping = 0;
                alarm[0] = 90;
            }
        }
    }
    
    //Otherwise, if the axe is not visible
    else {
    
        //Set the sprite
        sprite_index = spr_bowser_dead;
        
        //Animate
        image_speed = 0.2;
    
        //If there's still a bridge
        if (instance_number(obj_bridge) &gt; 0) {
                
            //Stop movement
            speed = 0;
            gravity = 0;
            
            //Look to the right
            xscale = 1;
        }
        
        //Otherwise, fall down to the lava pit
        else {
        
            //Set the gravity
            gravity = 0.075;
            
            //Check for lava
            var lava = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_lava, 0, 0);
            
            //If there's lava
            if (lava)
            &amp;&amp; (vspeed &gt; 0.75) {
            
                //Set the vertical speed
                vspeed = 0.75;    
                
                //If not inside lava
                if (inlava == 0) {
                
                    //Play 'Bowser Lava' sound
                    audio_play_sound(snd_bowser_lava, 0, false);
                
                    //Inside lava
                    inlava = 1;
                    
                    //Create lava splash
                    with (instance_create(x-8,lava.bbox_top-12,obj_smoke)) {
                    
                        sprite_index = spr_lavasplash;
                        image_speed = 0.3;
                    }                    
                }            
            }          
        }
    }
}

//Cooldown hurt
if (cooldown &gt; 0)
    cooldown--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fireball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage bowser

//Show hurt poses
cooldown = 4;

//If number of hits is smaller than 2, start dazing
if (hits &gt; 1) {

    //Decrement hits
    hits--;
    
    //Start dazing
    if (hits &lt; 3)
        alarm[5] = 4;
}

//Otherwise it hits is equal to 1, inherit default event
else {

    event_inherited();    
}

//Destroy fireball
with (other) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_levelcontrol">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the music

//If the player is not on the last stage
if (global.world != "8-4") 
&amp;&amp; (global.world != "D-4") {

    //With the level controller
    with (other) {
    
        //If the boss music is not playing
        if (levelmusic != 998) {
        
            //Stop current theme
            audio_stop_sound(global._music[levelmusic]);
        
            //Set 'Bowser' music
            levelmusic = 998;
            
            //Play it
            alarm[0] = 2;
        }
    }
}

//Otherwise, play 'Bowser - Final'
else {

    //With the level controller
    with (other) {
    
        //If the boss music is not playing
        if (levelmusic != 999) {
        
            //Stop current theme
            audio_stop_sound(global._music[levelmusic]);
        
            //Set 'Bowser' music
            levelmusic = 999;
            
            //Play it
            alarm[0] = 2;
        }
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom bowser kill event

//Inherit event
event_inherited();

//Switch between enemies
switch (fake) {

    //Goomba
    case (1): imdead.sprite_index = spr_goomba; break;
    
    //Koopa
    case (2): imdead.sprite_index = spr_shell; break;
    
    //Buzzy Beetle
    case (3): imdead.sprite_index = spr_shell_buzzy; break
    
    //Spiny
    case (4): imdead.sprite_index = spr_spiny; break;
    
    //Lakitu
    case (5): imdead.sprite_index = spr_lakitu; break;
    
    //Blooper
    case (6): imdead.sprite_index = spr_blooper; break;
    
    //Hammer Bro.
    case (7): imdead.sprite_index = spr_hammerbro; break;
}

//Set motion
imdead.vspeed = -3;
imdead.hspeed = 0;
imdead.gravity = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw bowser

if (cooldown &gt; 0)
    draw_sprite_ext(spr_bowser_dead, -1*2, x, y, xscale, 1, 0, c_white, 1);
else
    draw_sprite_ext(sprite_index, -1, x, y, xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
