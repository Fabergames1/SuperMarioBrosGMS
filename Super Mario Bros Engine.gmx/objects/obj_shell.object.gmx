<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Koopa Shell

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 0;

//How many points should the enemy give when killed with an item
handicap = 1;
handicap_stomp = 0;

//Palette
palette_index = pal_koopa;

//Facing direction
xscale = 1;

//Animate
image_speed = 0;
image_index = 1;

//Combo
hitcombo = 0;

//Whether the shell is not kicked
//0: Not kicked
//1: Kicked
//2: Kicked, can harm the player
ready = 0;

//Whether the shell is flipped
flip = 0;

//Animate legs if not kicked
frame = 0;
alarm[0] = 192;

//Pop out from the shell
alarm[1] = 312;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pop out from the shell

//If the koopa shell has not been kicked
if (ready == 0) {
    
    //Check sprite
    switch (sprite_index) {
    
        //Green Koopa
        case (spr_shell): {
        
            instance_create(x,y,obj_koopa);
            instance_destroy();            
        } break;
        
        //Red Koopa
        case (spr_shell_red): {
        
            instance_create(x,y,obj_koopa_red);
            instance_destroy();            
        } break;
        
        //Buzzy Beetle
        case (spr_shell_buzzy): {        
        
            instance_create(x,y,obj_buzzybeetle);
            instance_destroy();              
        } break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the frame

//If the shell is not kicked
if (ready == 0) {

    frame = !frame;
    alarm[0] = 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Koopa shell logic

//Make invulnerable to fire
if (sprite_index == spr_shell_buzzy)
    vulnerable = 1;

//If the player dies, stop everything
if (can_freeze()) {

    scr_freeze();
    exit;
}

//When kicked
if (ready &gt; 0) {
    
    //Check nearby blocks
    if (ready == 2)
    &amp;&amp; (sign(hspeed) != sign(prevhspeed)) {
    
        //If moving right
        if (hspeed &gt; 0) {
        
            with (instance_create(x-5,y,obj_smoke)) {
            
                sprite_index = spr_shellthump;
                image_speed = 0.5;
            }
        }
        
        //Otherwise, if moving left
        else if (hspeed &lt; 0) {
        
            with (instance_create(x+5,y,obj_smoke)) {
            
                sprite_index = spr_shellthump;
                image_speed = 0.5;
            }                    
        }
         
        //Previous horizontal speed
        prevhspeed = hspeed;
    
        //Play 'Bump' sound if inside the view
        if (!audio_is_playing(snd_bump)) {
    
            if (x &gt; view_xview[0]-16)
            &amp;&amp; (x &lt; view_xview[0]+view_wview[0]+16)
                audio_play_sound(snd_bump, 0, false);     
        }
    }
    
    //Slow down when falling
    event_user(7);
        
    //Allow shell to harm the player
    if (instance_exists(obj_playerparent))
    &amp;&amp; (ready == 1)
    &amp;&amp; (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_playerparent,0,0))
        ready = 2;
}

//Otherwise, if not moving
else {

    if (collision_rectangle(x,bbox_bottom-1,x,bbox_bottom+1,obj_solid,0,0))
    &amp;&amp; (hspeed != 0)
        hspeed = 0;
}

//Default wall collision
event_user(3);

//Default floor collision
event_user(4);

//Destroy when outside the view
if (x &lt; view_xview[0]-64)
|| (x &gt; view_xview[0]+view_wview[0]+64)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special player collision script

//If the player is invulnerable, deny this event
if (instance_exists(obj_invincibility))
exit;

//If the shell can harm the player, do default script
if (ready == 2)
    event_inherited();

//Otherwise, allow kick
else if (ready == 0) {

    //If the player is not moving up
    if (other.vspeed &gt;= 0) {
    
        //Play 'Kick' sound.
        audio_play_sound(snd_kick, 0, false);
        
        //Create hit
        with (instance_create(x,y,obj_smoke)) {
        
            sprite_index = spr_shellthump;
            image_speed = 0.5;
        }
        
        //Get points
        with (instance_create((bbox_left+bbox_right)/2, y, obj_score)) {
        
            if (obj_playerparent.hitcombo &lt; 7)
                event_user(2+obj_playerparent.hitcombo);
            else
                event_user(10);
        }
        
        //Kick
        ready = 1;
        alarm[0] = -1;
        alarm[1] = -1;
        
        //Animate
        image_speed = 0.3;
            
        //Increment combo
        obj_playerparent.hitcombo++;
        
        //If the player is at the left, send the shell to the right
        if (obj_playerparent.x &lt; x) {
        
            hspeed = 3;
            prevhspeed = hspeed;
        }
        
        //Otherwise, send it to the left
        else if (obj_playerparent.x &gt; x) {
        
            hspeed = -3;
            prevhspeed = hspeed;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slow down when falling

if (gravity &gt; 0)
    hspeed = max(0,abs(1.5)-0.1)*sign(hspeed);
else
    hspeed = max(0,abs(3)+0.1)*sign(hspeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default enemy dead script

//Create koopa shell
imdead = instance_create(x,y-2,obj_shell);

//Make the dead object hereby the sprite
imdead.sprite_index = sprite_index;

//Make the dead object hereby the scale
imdead.image_xscale = 1;

//Flip the shell
imdead.flip = 1;

//Set the vertical speed
imdead.vspeed = -3;

//Set the hspeed of the dead object
if (other.hspeed == 0) {

    //If the kill object is at the left of this object
    if (other.bbox_left+other.bbox_right/2 &lt; bbox_left+bbox_right/2)
        imdead.hspeed = 0.8;
    else
        imdead.hspeed = -0.8;
}
else {

    if (other.hspeed &gt; 0)
        imdead.hspeed = 0.8;
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -0.8;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into a new shell

with (instance_create(x,y,obj_shell)) {

    sprite_index = other.sprite_index;
    flip = other.flip;
}
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate the object

image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw shell

//Set up the palette
pal_swap_set(pal_koopa, global.skin, false);

//Draw sprite
if (flip == 0)
    draw_sprite_ext(sprite_index, image_index-frame, x, y+1, image_xscale, 1, 0, c_white, 1);
else
    draw_sprite_ext(sprite_index, image_index-frame, x, y+19, image_xscale, -1, 0, c_white, 1);

//Reset the palette
pal_swap_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
