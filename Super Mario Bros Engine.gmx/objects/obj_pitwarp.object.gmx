<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999999</depth>
  <persistent>0</persistent>
  <parentName>obj_warproom</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warps the player to a different room

/*
**  This item uses creation code!
**
**  postchange = Pick from below: (Optional)
**      0: None
**      1: Warp
**      2: Climb
**
**  postx = New x coordinate
**  posty = New y coordinate
**  myroom = Destination room
*/

//Default Values:
postchange = -1;
postx = 0;
posty = 0;
myroom = room_next(room);

//Whether the player fell down
ready = 0;

//Draw bonus icons
drawbonus = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warp the player to another destination

if (ready == 0)
&amp;&amp; (instance_exists(obj_playerparent)) {

    //If the player is above
    if (obj_playerparent.bbox_bottom &gt; room_height+32) {
    
        //Enable pixel fade
        with (obj_persistent) tr_pixel = 1;
        
        //Start warp
        ready = 1;
    
        //If the position needs to be changed in the new room.
        if (postchange != -1) {
        
            //Remember the spawn type
            global.postchange = postchange;
            
            //Remember the x spawn position.
            global.postx = postx+16;
            
            //Remember the y spawn position.
            global.posty = posty+16;
        }
        
        //Go to the destination room
        room_goto(myroom);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw player faces

if (drawbonus == 1) {

    //Draw Mario's face
    if (global.player == 0) {
    
        draw_background(bgr_bonus_mario, 0, 0);
        draw_background(bgr_bonus_mario, room_width-256, 0);
    }
    
    //Otherwise, draw Luigi's face
    else {
    
        draw_background(bgr_bonus_luigi, 0, 0);
        draw_background(bgr_bonus_luigi, room_width-256, 0);            
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
