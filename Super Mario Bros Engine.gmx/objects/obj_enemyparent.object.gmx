<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The parent object for all enemies

//How vulnerable is this enemy to various items?
//0: Normal
//1: Immune to fireballs
//99: Invincible
//100: Invincible + Ignore projectiles
vulnerable = 0;

//How vulnerable is this enemy to the player?
//0: Normal
//1: Hurt Mario
//-1: Phase through Mario
stomp = 0;

//How many points should the enemy give when killed with an item
//0: 100
//1: 200
//2: 400
//3: 500
//4: 800
//5: 1000
//6: 2000
//7: 4000
//8: 5000
//9: 8000
//10: 1-UP
handicap = 0;
handicap_stomp = 0;

//Does this enemy have a palette
palette_index = noone;

//Facing direction
xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move towards the player

//If the enemy is not moving
if (hspeed == 0) {

    //If the player does not exist
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x)
        hspeed = -0.5;
    else
        hspeed = 0.5;
}

//Double speed if you chose hard mode
if (global.hardmode == 1)
    hspeed = hspeed*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy logic

//If the player dies, stop everything
if (can_freeze()) {

    scr_freeze();
    exit;
}

//Turn at enemies script
event_user(2);

//Default wall collision
event_user(3);

//Default floor collision
event_user(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_invincibility">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with the player while invulnerable

//If the enemy is vulnerable to fireballs
if (vulnerable &lt; 99) {

    //Play 'Kick' sound
    audio_play_sound(snd_kick, 0, false);
    
    //Get some points based on handicap
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) event_user(other.handicap);
        
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) {
    
        sprite_index = spr_shellthump;
        image_speed = 0.5;
    }
    
    //Kill the enemy
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fireball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with a fireball

//If the enemy is vulnerable to fireballs
if (vulnerable == 0) {

    //Play 'Kick' sound
    audio_play_sound(snd_kick, 0, false);

    //Kill the enemy
    event_user(0);
    
    //Get some points based on handicap
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
        event_user(other.handicap);
}

//Destroy the fireball
if (vulnerable &lt; 100)
    with (other) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shell">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with the player while invulnerable

//If the shell has been kicked
if (other.ready &gt; 0) {
    
    //If the enemy is vulnerable to fireballs
    if (vulnerable &lt; 99) {
        
        //Get points based on combo
        if (other.hitcombo == 0) { //500 points
        
            audio_play_sound(snd_kick2, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 1) { //800 points
        
            audio_play_sound(snd_kick3, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 2) { //1000 points
        
            audio_play_sound(snd_kick4, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 3) { //2000 points
        
            audio_play_sound(snd_kick5, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 4) { //4000 points
        
            audio_play_sound(snd_kick6, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 5) { //5000 points
        
            audio_play_sound(snd_kick7, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(8);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(9);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
    
            audio_play_sound(snd_1up, 0, false);
            audio_play_sound(snd_kick, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(10);
        }
        
        //Increment combo
        other.hitcombo++;
            
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) {
        
            sprite_index = spr_shellthump;
            image_speed = 0.5;
        }
        
        //Kill the enemy
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockbumper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with bumped bricks

//If the enemy is not invulnerable
if (vulnerable &lt; 99) {
    
    //Play 'Kick sound
    audio_play_sound(snd_kick, 0, false);
    
    //Kill or flip the enemy
    event_user(6);
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) {
    
        sprite_index = spr_shellthump;
        image_speed = 0.5;
    }
        
    //Get some points
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) 
        event_user(other.handicap);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with bumped blocks

if (other.vspeed &lt; 0)
&amp;&amp; (vulnerable &lt; 99)
&amp;&amp; (bbox_bottom &lt; other.yprevious+5) {

    //Play 'Kick sound
    audio_play_sound(snd_kick, 0, false);

    //Kill or flip the enemy
    event_user(6);
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) {
    
        sprite_index = spr_shellthump;
        image_speed = 0.5;
    }
        
    //Get some points
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) 
        event_user(other.handicap);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with the player

//If the player is invulnerable, exit
if (instance_exists(obj_invincibility))
exit;

//If the enemy is invulnerable to stomp or the player is invulnerable
if (stomp != -1)
|| (other.invulnerable == -1) {

    //If the player is above the enemy and moving down
    if (other.bbox_bottom &lt; bbox_top-vspeed+5) 
    &amp;&amp; (other.vspeed &gt;= 0) {
    
        //If the enemy can be stomped and it is not underwater
        if (stomp == 0)
        &amp;&amp; (other.swimming == false) { 
        
            //Play 'Stomp' sound
            audio_play_sound(snd_stomp, 0, false);
        
            //Prevent certain enemies from getting double stomped
            if (vspeed &lt; 0) {
            
                y = yprevious;
                if (other.vspeed &gt; 0)
                    other.y = other.yprevious;
            }
            
            //Bounce the player
            with (other) event_user(1);

            //Get points based on combo
            if (other.hitcombo &lt;= 10-handicap_stomp) {
            
                //If the player did 10 or less consecutive stomps
                with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) 
                    event_user((0+other.handicap_stomp)+obj_playerparent.hitcombo);
            }
            else {
            
                with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) 
                    event_user(10);
            }
            
            //Increment combo
            other.hitcombo++;
            
            //Stomp the enemy
            event_user(1);
        }
        
        //Otherwise, hurt the player
        else
            with (other) event_user(0);  
    }
    
    //Otherwise, hurt the player
    else
        with (other) event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default flip script

//Mainly for enemies that can be used to kill other enemies
//Defaults to dead script
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn at ledges script

//If the object's vertical speed is larger than 0.
if (gravity == 0) {

    //If moving left
    if (hspeed &lt; 0) &amp;&amp; (!collision_rectangle(bbox_left-1+hspeed,bbox_bottom-1,bbox_left,bbox_bottom+15,obj_solid,0,0))
    || (hspeed &gt; 0) &amp;&amp; (!collision_rectangle(bbox_right,bbox_bottom-1,bbox_right+1+hspeed,bbox_bottom+15,obj_solid,0,0))
        hspeed = -hspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn at enemies script

var overlap = collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom-4,obj_enemyparent,0,1);
if (overlap) 
&amp;&amp; (overlap.vulnerable &lt; 99) {

    //Go right if the object is further to the right or in the same spot and a higher id.
    if ((bbox_left+bbox_right)*0.5 &gt; (overlap.bbox_left+overlap.bbox_right)*0.5)
    || (((bbox_left+bbox_right)*0.5 = (overlap.bbox_left+overlap.bbox_right)*0.5) &amp;&amp; (id &gt; overlap.id)) {
    
        //Keep going right.
        hspeed = abs(hspeed);
    }
    
    //Otherwise, go left.
    else
        hspeed = -abs(hspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default enemy stomp script

//Create dead object
imdead = instance_create(x,y,obj_enemy_stomped);

//Make the dead object hereby the sprite
imdead.sprite_index = sprite_index;

//Make the dead object hereby the scale
imdead.image_xscale = xscale;

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default enemy dead script

//Create dead object
imdead = instance_create(x,y,obj_enemy_dead);

//Make the dead object hereby the sprite
imdead.sprite_index = sprite_index;

//Make the dead object hereby the scale
imdead.image_xscale = xscale;

//Set the hspeed of the dead object
if (other.hspeed == 0) {

    //If the kill object is at the left of this object
    if (other.bbox_left+other.bbox_right/2 &lt; bbox_left+bbox_right/2)
        imdead.hspeed = 1;
    else
        imdead.hspeed = -1;
}
else {

    if (other.hspeed &gt; 0)
        imdead.hspeed = 1;
    else if (other.hspeed &lt; 0)
        imdead.hspeed = -1;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the enemy

//Set up the palette
if (palette_index != noone) {

    pal_swap_set(palette_index, global.skin, false);
}

//Draw sprite
draw_sprite_ext(sprite_index, -1, x, y+1, xscale, image_yscale, 0, c_white, 1);

//Reset the palette
pal_swap_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
