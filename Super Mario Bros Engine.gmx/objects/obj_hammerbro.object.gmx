<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hammerbro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hammer Bro.

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 0;

//How many points should the enemy give when killed with an item
handicap = 5;
handicap_stomp = 5;

//Palette
palette_index = pal_hammerbro;

//Whether can go through solid
throughsolid = 0;

//Whether the hammer bro can chase the player
chase = 0;

//Number of hammers to throw
hammers = 1+random(round(3));

//Animate
image_speed = 0.1;

//Reverse horizontal speed.
alarm[0] = 34;

//Jump upwards / downwards.
alarm[1] = 4;

//Set the throwing pose.
alarm[2] = 7;

//Move
alarm[10] = 2;

//Give chase
alarm[6] = 2640;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move towards the player

//If the enemy is not moving
if (hspeed == 0) {

    //If the player does not exist
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x)
        hspeed = -0.25;
    else
        hspeed = 0.25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Give chase

//Stop jumping
alarm[1] = -1;

//Start chasing
chase = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disallow jump through solids

throughsolid = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow jump through solids

throughsolid = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throw a hammer

//If the player does not exist or the player is at the left
if (!instance_exists(obj_playerparent))
|| (obj_playerparent.x &lt; x) {

    with (instance_create(x+2,y-2,obj_hammer)) {
    
        hspeed = -1;
        image_xscale = -1;
    }
}
else {

    with (instance_create(x-2,y-2,obj_hammer)) {
    
        hspeed = 1;
        image_xscale = 1;
    }    
}

//Set the default sprite.
sprite_index = spr_hammerbro;

//Throw another hammer.
alarm[2] = 7+random(round(28));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throw up a hammer

//If there's hammers to throw
if (hammers &gt; 0) {
    
    //Set the throwing pose
    sprite_index = spr_hammerbro_throw;
    
    //Decrement hammers
    hammers--;
    
    //Throw a hammer
    alarm[3] = 15;
}

//Otherwise, get new hammers and hold up for 1 / 2 seconds
else {

    //Increment hammers
    hammers = 1+random(round(3));

    //Throw again
    alarm[2] = 60+random(round(60));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump upwards / downwards

//If there's a row of blocks above and below the hammer bro.
if (collision_rectangle(bbox_left,bbox_top-40,bbox_right,bbox_top-40,obj_blockparent,0,0))
&amp;&amp; (collision_rectangle(bbox_left,bbox_bottom+8,bbox_right,bbox_bottom+8,obj_blockparent,0,0)) {

    //Set the vertical speed
    if (floor(random(50)) &lt; 25) {
    
        vspeed = -6;
        alarm[4] = 2;
        alarm[5] = 16;
    }
    else {
    
        vspeed = -2.5;
        alarm[4] = 2;
        alarm[5] = 35;
    }
}

//Otherwise, check where's the blocks and jump up or down.
else {

    //If the blocks are above
    if (collision_rectangle(bbox_left,bbox_top-40,bbox_right,bbox_top-40,obj_blockparent,0,0)) {
    
        vspeed = -6;
        alarm[4] = 2;
        alarm[5] = 16;
    }
    
    //Otherwise, if they are below
    else if (collision_rectangle(bbox_left,bbox_bottom+8,bbox_right,bbox_bottom+8,obj_blockparent,0,0)) {
    
        vspeed = -2.5;
        alarm[4] = 2;
        alarm[5] = 35;
    }
    else
        vspeed = -6;
}

//Boost jump
y--;

//Gravity
gravity = 0.25;

//Jump again
alarm[1] = 168;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reverse horizontal speed

//If not chasing
if (chase != 1) {

    hspeed = -hspeed;
    alarm[0] = 64;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hammer bro logic

//If the player dies, stop everything
if (can_freeze()) {

    scr_freeze();
    exit;
}

//If not jumping through solids
if (throughsolid == 0) {

    //Default wall collision
    event_user(3);

    //Default floor collision
    event_user(4);
    
    //If chasing, jump on walls
    if (chase == 1) {
    
        if (!instance_exists(obj_playerparent))
        || (obj_playerparent.x &lt; x)
            hspeed = -0.5;
        else {
        
            hspeed = 0.25;
            chase = 2;
            alarm[0] = 32;
        }
    }
    else if (chase == 2) {
    
        if (!instance_exists(obj_playerparent))
        || (obj_playerparent.x &lt; x)
            alarm[6] = 1;    
    }
}

//Otherwise, cap vertical speed
else {

    if (vspeed &gt; 4) {
    
        vspeed = 4;
        gravity = 0;
    }
}

//Set up the facing direction.
if (!instance_exists(obj_playerparent))
|| (obj_playerparent.x &lt; x)
    xscale = -1;
else
    xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default wall collision
        
//Jump when a wall is reached
if ((hspeed &lt; 0) &amp;&amp; (collision_rectangle(bbox_left+hspeed*2,bbox_top+4,bbox_left+hspeed*2,bbox_bottom-1,obj_solid,0,0)))
|| ((hspeed &gt; 0) &amp;&amp; (collision_rectangle(bbox_right+hspeed*2,bbox_top+4,bbox_right+hspeed*2,bbox_bottom-1,obj_solid,0,0))) {

    //If there's no gravity, hop
    if (gravity == 0) &amp;&amp; (chase == 1) {
    
        vspeed = -6;
        y--;
    }
}

//Move away from walls
if ((hspeed &lt; 0) &amp;&amp; (collision_rectangle(bbox_left+hspeed,bbox_top+4,bbox_left+hspeed,bbox_bottom-1,obj_solid,0,0)))
    x += hspeed;
if ((hspeed &gt; 0) &amp;&amp; (collision_rectangle(bbox_right+hspeed,bbox_top+4,bbox_right+hspeed,bbox_bottom-1,obj_solid,0,0)))
    x -= hspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
