<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_luigi_small_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_playerparent</parentName>
  <maskName>spr_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///It's a me, Luigi!

//Inherit variables from parent
event_inherited();

//Palette
palette_index = pal_luigi;

//Inherit physical variables
switch (global.physics)
{
    case 0: 
        scr_physics_mario_nes();
    break;
    case 1: 
        scr_physics_luigi_ll();
    break;
    case 2: 
        scr_physics_luigi_smas();
    break;
    case 3: 
        scr_physics_luigi_modern();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle player specific eyecandy

//If Luigi is turning and it is making contact with the floor.
if (sprite_index == scr_luigi_skid()) &amp;&amp; (state != cs_jump) {

    //If Luigi is not crouched down
    if (crouch == false) {
    
        alarm[4] = 4;
        with (instance_create(x,bbox_bottom-4,obj_smoke)) {
        
            sprite_index = spr_smoke_skid;
            image_speed = 0.3;
        }
    }
    else
        alarm[4] = 1;
}
else
    alarm[4] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Luigi's animation

//Reset firing state
if (firing &gt; 0)
&amp;&amp; (state &gt; cs_walk)
    firing = 0;
    
//If Luigi is crouched down
if (crouch == true) {

    //Set the 'Pose' animation
    sprite_index = scr_luigi_pose();
    
    //Do not animate
    image_speed = 0;
    image_index = 0;
    
    //Reset firing
    firing = 0;
    
    //Set the mask
    mask_index = spr_mask;
    
    //Stop 'Skid' sound
    if (audio_is_playing(snd_skid))
        audio_stop_sound(snd_skid);
}

//Otherwise if Luigi is not crouched down
else if (crouch == false) {

    //If Luigi has the fire powerup and he is shooting a fireball
    if (global.powerup == cs_fire)
    &amp;&amp; (firing &gt; 0) {

        //Set 'Pose' sprite
        sprite_index = scr_luigi_pose();
        
        //Decrement firing
        firing--;
        
        //Do not animate
        image_speed = 0;
        image_index = 4;        
    }
    
    //Otherwise, perform regular animation
    else {

        //If Luigi is idling
        if (state == cs_idle) {
            
                //Set 'Stand' sprite
                sprite_index = scr_luigi_stand();
                
                //Do not animate
                image_speed = 0;
                image_index = 0;
        }
        
        //Otherwise, if Luigi is walking
        else if (state == cs_walk) {
        
            //Check first the facing direction of Luigi and it's facing direction and set a 'Skid' pose if so
            if (((hspeed &gt; 0.1) &amp;&amp; (xscale == -1))
            || ((hspeed &lt; -0.1) &amp;&amp; (xscale == 1)))
            &amp;&amp; (swimming == false) {
            
                //Set 'Skid' sprite
                sprite_index = scr_luigi_skid();
                
                //Do not animate
                image_speed = 0;
                image_index = 0;
                
                //Play 'Skid' sound
                if (!audio_is_playing(snd_skid))
                    audio_play_sound(snd_skid, 0, true);
            }
            
            //Otherwise set the 'Walk' pose
            else {
            
                //Set 'Walk' pose
                sprite_index = scr_luigi_walk();
                
                //Set the animation speed
                image_speed = 0.065+abs(hspeed)/7.5;
            }
        }
    }
    
    //Otherwise, if Luigi is jumping or falling
    if (statedelay &gt; 0) 
    || (state == cs_jump) {
    
        //If Luigi is swimming
        if (swimming == true) {
        
            //Set 'Swim' pose
            sprite_index = scr_luigi_swim();
            
            //If not moving up
            if (vspeed &lt; 0)
                image_speed = 0.2;
            
            //Otherwise, if not moving up
            else {
            
                image_speed = 0;
                image_index = 0;
            }
        }
        
        //Otherwise, if Luigi is not swimming
        else if (swimming == false) {
        
            //Stop 'Skid' sound
            if (audio_is_playing(snd_skid))
                audio_stop_sound(snd_skid);
        
            //Do not animate
            image_speed = 0;            
            
            //Set 'Jump' pose if jumping
            if (jumping &gt; 0)
                sprite_index = scr_luigi_jump();
            else if (sprite_index != scr_luigi_skid())
                sprite_index = scr_luigi_walk();
        }
    }
    
    //Otherwise, if Luigi is climbing
    else if (state == cs_climb) {
    
        //Set 'Climb' sprite
        sprite_index = scr_luigi_climb();
        
        //If moving
        if (vspeed != 0) 
            image_speed = 0.15;
            
        //Otherwise, if not moving
        else {
        
            image_speed = 0;
            image_index = 0;
        }
    }
    
    //If Luigi is not small
    if (global.powerup != cs_small)
        mask_index = spr_mask_big;
        
    //Otherwise, if Luigi is small
    else
        mask_index = spr_mask;
    
    //Stop the 'Skid' sound when not changing direction.
    if (sprite_index != scr_luigi_skid())
    &amp;&amp; (audio_is_playing(snd_skid))
        audio_stop_sound(snd_skid);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
