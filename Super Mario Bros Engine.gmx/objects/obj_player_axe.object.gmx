<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_small_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>spr_mask_big</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The player after touching the axe

//Set the horizontal speed
hspeed = 1.5;

//Set the gravity
gravity = 0.25;

//Handle movement
ready = 0;

//Handle scale
xscale = 1;

//Previous width
prevwidth = room_width;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player animation

//If there's ground below
if (collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_solid, 0, 0)) {

    if (hspeed == 0) {
    
        //Do not animate.
        image_speed = 0;
        image_index = 0;
        
        //Set the sprite
        if (global.player == 0)
            sprite_index = scr_mario_walk();
        else
            sprite_index = scr_luigi_walk();
    }
    else {
    
        //Animate it.
        image_speed = 0.2;
        
        //Set the sprite
        if (global.player == 0)
            sprite_index = scr_mario_walk();
        else
            sprite_index = scr_luigi_walk(); 
    }
}

//Otherwise, jump
else {

    //Do not animate.
    image_speed = 0;
    image_index = 0;
    
    //Set the sprite
    if (global.player == 0)
        sprite_index = scr_mario_jump();
    else
        sprite_index = scr_luigi_jump();  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player goal logic

//Execute default event.
event_inherited();

//First, check if mario touched the axe.
if (ready == 0) {

    if (x &gt; obj_axe.x+32) {
    
        //Snap to position and stop.
        x = obj_axe.x+32;
        hspeed = 0;
        
        //Wait until bowser falls
        ready = 1;
        
        //Set the facing direction.
        xscale = -1;
    }
}
else if (ready == 1) {

    if (instance_number(obj_bowser) == 0)
    &amp;&amp; (instance_number(obj_bridge) == 0) {
    
        //Play 'World Clear' theme.
        audio_play_sound(bgm_worldclear, 0, 0);
    
        //Set the horizontal speed.
        hspeed = 1.5;
        
        //Go see toad
        ready = 2;
        
        //Set the facing direction.
        xscale = 1;
        
        //Set the speed of the view
        room_width = prevwidth+256;             
    }
}
else if (ready == 2) {

    //Look for the nearby toad
    toad = collision_rectangle(x+40,bbox_top,x+41,bbox_bottom,obj_toad,0,1);
    
    //If toad is present
    if (toad) 
    &amp;&amp; (x &gt; toad.x-40) {
    
        with (toad) {
            
            //Make him jump
            alarm[3] = 60;
            
            //Show message.
            alarm[0] = 60;
        }
        
        //Stop right there, listen toad.
        ready = 3;
        hspeed = 0;
        
        //Snap to toad position
        x = toad.x-40;
    }
}

//Update view
if (ready &gt; 1)
    obj_levelcontrol.x += 1.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the player

draw_sprite_ext(sprite_index, -1, x, y+1, xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
